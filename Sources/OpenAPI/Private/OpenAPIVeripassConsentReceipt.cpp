/**
 * prodapi.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIVeripassConsentReceipt.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIVeripassConsentReceipt::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Score.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("score")); WriteJsonValue(Writer, Score.GetValue());
	}
	if (Updated.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("updated")); WriteJsonValue(Writer, Updated.GetValue());
	}
	if (Age.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("age")); WriteJsonValue(Writer, Age.GetValue());
	}
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());
	}
	if (Subjects.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("subjects")); WriteJsonValue(Writer, Subjects.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIVeripassConsentReceipt::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("score"), Score);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("updated"), Updated);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("age"), Age);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("subjects"), Subjects);

	return ParseSuccess;
}

}
